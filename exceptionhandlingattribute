using RPM_API.common;
using System;
using System.Net;
using System.Net.Http;
using System.Web;
using System.Web.Http;
using System.Web.Http.Filters;
using RPM_Model.common;
using RPM_Model;

namespace RPM_New.ActionFilters
{
    [AttributeUsage(AttributeTargets.All)]
    public class ExceptionHandling : ExceptionFilterAttribute
    {
        public override void OnException(HttpActionExecutedContext context)
        {
            if(context.Response==null){

            
            }
            else if(context.Exception is HttpResponseException)
            {
                HttpResponseException hexception = (HttpResponseException)context.Exception;
                if(hexception.Response.StatusCode==HttpStatusCode.Unauthorized)
                {

                }
            }
            else if (context.Exception is DatabaseException)
            {
                new ExceptionHandlingModel().LogException(context.Exception, "Database");
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError)
                {
                    //Content = new StringContent(context.Exception.Message),
                    Content = new StringContent("An error occurred, please try again or contact the administrator."),
                    ReasonPhrase = "Exception"
                });
            }
            else
            {

                    new ExceptionHandlingModel().LogException(context.Exception, "General");
                    throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError)
                    {
                        Content = new StringContent("An error occurred, please try again or contact the administrator."),
                        ReasonPhrase = "Critical Exception"
                    });
            }
        }
    }
}
